@model EducationSystemKZ_Azure.Models.Student

@{
    ViewBag.Title = "Search";

    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}

<h2>Search</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-container">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-description">* Optional</span>
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var semester = new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem {Text = "1", Value = "1"},
                    new SelectListItem {Text = "2", Value = "2"},
                    new SelectListItem {Text = "3", Value = "3"},
                    new SelectListItem {Text = "4", Value = "4"},
                    new SelectListItem {Text = "5", Value = "5"},
                    new SelectListItem {Text = "6", Value = "6"},
                }, "Value", "Text");
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Semester, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-container">
                @Html.DropDownListFor(model => model.Semester, semester, "Select Semester", new { @class = "form-control input" })
                <span class="input-description">* Optional</span>
                @Html.ValidationMessageFor(model => model.Semester, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var department = new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem {Text = "Medical Technology", Value = "medical technology"},
                    new SelectListItem {Text = "Dentist", Value = "dentist"},
                    new SelectListItem {Text = "Pharmacy", Value = "pharmacy"},
                    new SelectListItem {Text = "Midwifery", Value = "midwifery"},
                    new SelectListItem {Text = "Nursing", Value = "nursing"},
                }, "Value", "Text");
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-container">
                @Html.DropDownListFor(model => model.Department, department, "Select Department", new { @class = "form-control input" })
                <span class="input-description">* Optional</span>
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>




        @*<div class="form-group">
                @Html.LabelFor(model => model.Semester, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Semester, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Semester, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Back to Student Page", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
